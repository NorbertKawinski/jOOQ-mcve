/*
 * This file is generated by jOOQ.
 */
package org.jooq.mcve.java.postgres.embeddables.records;


import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Row1;
import org.jooq.impl.EmbeddableRecordImpl;
import org.jooq.mcve.java.postgres.tables.Author;


/**
 * The embeddable <code>mcve.author_pkey</code>.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class AuthorPkeyRecord extends EmbeddableRecordImpl<AuthorPkeyRecord> implements Record1<UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mcve.author_pkey.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>mcve.author_pkey.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    // -------------------------------------------------------------------------
    // Record1 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row1<UUID> fieldsRow() {
        return (Row1) super.fieldsRow();
    }

    @Override
    public Row1<UUID> valuesRow() {
        return (Row1) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return (Field<UUID>) field(0);
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public AuthorPkeyRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public AuthorPkeyRecord values(UUID value1) {
        value1(value1);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AuthorPkeyRecord
     */
    public AuthorPkeyRecord() {
        super(Author.AUTHOR.AUTHOR_PKEY.getDataType().getRow());
    }

    /**
     * Create a detached, initialised AuthorPkeyRecord
     */
    public AuthorPkeyRecord(UUID id) {
        this();

        setId(id);
        resetChangedOnNotNull();
    }
}
